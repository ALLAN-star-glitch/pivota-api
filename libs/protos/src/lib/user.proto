syntax = "proto3";

package user;

// ================== Service Definition ==================
service UserService {
  // Core profile operations
  rpc CreateUserProfile(CreateUserProfileRequest) returns (UserProfileResponse);
  rpc GetUserProfileByUuid(GetUserByUuidRequest) returns (UserProfileResponse);
  rpc GetUserProfileByUserCode(GetUserByUserCodeRequest) returns (UserProfileResponse);
  rpc GetUserProfileByEmail(GetUserByEmailRequest) returns (UserProfileResponse);

  // Admin or dashboard-only operations
  rpc GetAllUsers(Empty) returns (UserListResponse);
}

// ================== Requests ==================
message CreateUserProfileRequest {
  string firstName = 1;
  string lastName = 2;
  string email = 3;
  string phone = 4;
  string profileImage = 5; // optional
}

message GetUserByUuidRequest {
  string userUuid = 1; // Internal globally unique identifier
}

message GetUserByUserCodeRequest {
  string userCode = 1; // Custom external identifier (e.g., PIV-000123)
}

message GetUserByEmailRequest {
  string email = 1;
}

// ================== Responses ==================
message ErrorPayload {
  string message = 1;
  int32 code = 2;
}

message UserProfileResponse {
  bool success = 1;
  string message = 2;
  int32 code = 3;
  UserResponse user = 4;   // populated only on success
  ErrorPayload error = 5;  // structured error object
}

message UserResponse {
  string id = 1;
  string userCode = 2;            // External identifier (e.g., PIV-000123)
  string uuid = 3;                // Internal global unique identifier
  string firstName = 4;
  string lastName = 5;
  string email = 6;
  string phone = 7;
  string profileImage = 8;
  string status = 9;              // active, banned, pending
  string createdAt = 10;
  string updatedAt = 11;

  // Virtual fields populated dynamically from other services
  string role = 12;                  // fetched from admin-service RBAC
  string currentSubscription = 13;   // from payment-service
  string subscriptionStatus = 14;    // active, pending, expired
  string subscriptionExpiresAt = 15; // date string, optional
  string planId = 16;                // subscription plan ID
  string categoryId = 17;            // service category ID
}


message UserListResponse {
  bool success = 1;
  string message = 2;
  int32 code = 3;
  repeated UserResponse users = 4; // list of users
  ErrorPayload error = 5;          // structured error object
}

message Empty {}
