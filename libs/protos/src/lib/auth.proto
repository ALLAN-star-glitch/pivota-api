syntax = "proto3";

package auth;

// ------------------ Auth Service ------------------
service AuthService {
  rpc Signup(SignupRequest) returns (SignupResponse);  // Uses generic base response
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Refresh(RefreshRequest) returns (LoginResponse);
  rpc ValidateUser(ValidateUserRequest) returns (LoginResponse);
}

// ------------------ Signup ------------------
message SignupRequest {
  string firstName = 1;
  string lastName = 2;
  string email = 3;
  string password = 4;
  string phone = 5;
}

// Generic base response for signup (mirrors BaseResponseDto)
message ErrorPayload {
  string message = 1;
  string code = 2;
  string details = 3;  // optional
}

message SignupResponse {
  bool success = 1;
  string message = 2;
  string code = 3;
  UserResponse user = 4;          // populated only on success
  ErrorPayload error = 5;         // structured error object
}

// User info used in BaseResponse
message UserResponse {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string email = 4;
  string phone = 5;
  string createdAt = 6;
  string updatedAt = 7;
}

// ------------------ Login / Refresh / Validate ------------------
message ClientInfo {
  string device = 1;
  string ipAddress = 2;
  string userAgent = 3;
  string os = 4;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  ClientInfo clientInfo = 3; // optional
}

message AuthUserResponse {
  
  int32 id = 1;
  string email = 2;
  string firstName = 3;
  string lastName = 4;
  string phone = 5;
  string accessToken = 6;
  string refreshToken = 7;
  string createdAt = 8;
  string updatedAt = 9;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  string code = 3;
  AuthUserResponse user = 4;
  ErrorPayload error = 5;
}

message RefreshRequest {
  string refreshToken = 1;
}

message ValidateUserRequest {
  string email = 1;
  string password = 2;
}
